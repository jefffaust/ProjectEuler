/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
*/

#include "MathUtils.h"
#include "TestUtils.h"

#include <vector>

int main()
{
	START_TIMER;
	assert(pentagonal(10) == 145);
	assert(invPentagonal(145));
	assert(!invPentagonal(146));

	unsigned int D = -1;

	// let's choose an arbitrarily large upper bound
	const unsigned int upper = 10000;
	const unsigned int max = upper/2;

	for( unsigned int j = 1; j < max; ++j )
	{
		for( unsigned int k = j + 1; k < max; ++k )
		{
			unsigned int Pk = pentagonal(k);
			unsigned int Pj = pentagonal(j);
			if( invPentagonal(Pk + Pj) && invPentagonal(Pk - Pj) )
			{
				if( D > Pk - Pj )
				{
					D = Pk - Pj;
				}
			}
		}
	}

	return result(5482660, D);
}
